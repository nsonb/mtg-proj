[{"E:\\Fullstack\\mtg-fullstack\\src\\index.js":"1","E:\\Fullstack\\mtg-fullstack\\src\\App.js":"2","E:\\Fullstack\\mtg-fullstack\\src\\components\\Header.js":"3","E:\\Fullstack\\mtg-fullstack\\src\\components\\ImageSlide.js":"4","E:\\Fullstack\\mtg-fullstack\\src\\components\\Footer.js":"5","E:\\Fullstack\\mtg-fullstack\\src\\components\\Search.js":"6","E:\\Fullstack\\mtg-fullstack\\src\\axios\\api.js":"7","E:\\Fullstack\\mtg-fullstack\\src\\components\\CardList.js":"8","E:\\Fullstack\\mtg-fullstack\\src\\components\\Card.js":"9","E:\\Fullstack\\mtg-fullstack\\src\\components\\Filter.js":"10","E:\\Fullstack\\mtg-fullstack\\src\\components\\DropDownMenu.js":"11","E:\\Fullstack\\mtg-fullstack\\src\\context\\CardContext.js":"12"},{"size":414,"mtime":1610121721737,"results":"13","hashOfConfig":"14"},{"size":706,"mtime":1610240856092,"results":"15","hashOfConfig":"14"},{"size":480,"mtime":1610230796738,"results":"16","hashOfConfig":"14"},{"size":616,"mtime":1610150809077,"results":"17","hashOfConfig":"14"},{"size":395,"mtime":1610125839609,"results":"18","hashOfConfig":"14"},{"size":205,"mtime":1610230831187,"results":"19","hashOfConfig":"14"},{"size":929,"mtime":1610291936712,"results":"20","hashOfConfig":"14"},{"size":1502,"mtime":1610292271186,"results":"21","hashOfConfig":"14"},{"size":460,"mtime":1610288402030,"results":"22","hashOfConfig":"14"},{"size":6745,"mtime":1610242518382,"results":"23","hashOfConfig":"14"},{"size":1129,"mtime":1610238174244,"results":"24","hashOfConfig":"14"},{"size":956,"mtime":1610291676427,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ibh9po",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"E:\\Fullstack\\mtg-fullstack\\src\\index.js",[],["55","56"],"E:\\Fullstack\\mtg-fullstack\\src\\App.js",[],"E:\\Fullstack\\mtg-fullstack\\src\\components\\Header.js",[],"E:\\Fullstack\\mtg-fullstack\\src\\components\\ImageSlide.js",[],["57","58"],"E:\\Fullstack\\mtg-fullstack\\src\\components\\Footer.js",[],["59","60"],"E:\\Fullstack\\mtg-fullstack\\src\\components\\Search.js",[],"E:\\Fullstack\\mtg-fullstack\\src\\axios\\api.js",[],"E:\\Fullstack\\mtg-fullstack\\src\\components\\CardList.js",["61"],"E:\\Fullstack\\mtg-fullstack\\src\\components\\Card.js",[],"E:\\Fullstack\\mtg-fullstack\\src\\components\\Filter.js",["62"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport DropDownMenu from './DropDownMenu';\r\nimport { CardsContext } from '../context/CardContext';\r\n\r\nconst Filter = () => {\r\n    const def = \"All\";\r\n    const { setCardsWithParam } = useContext(CardsContext)\r\n    // list of types\r\n    const types = [\"All\",\"Artifact\",\"Autobot\",\"Card\",\"Character\",\"Conspiracy\",\"Creature\",\"Dragon\",\"Elemental\",\"Enchantment\",\"Goblin\",\"Hero\",\"instant\",\"Instant\",\"Jaguar\",\"Knights\",\"Land\",\"Phenomenon\",\"Plane\",\"Planeswalker\",\"Scheme\",\"Sorcery\",\"Specter\",\"Summon\",\"Tribal\",\"Vanguard\",\"Wolf\"];\r\n    const subtypes = [\r\n        \"Abian\",\"Adventure\",\"Advisor\",\"Aetherborn\",\"Ajani\",\"Alara\",\"Alicorn\",\r\n        \"Alien\",\"Ally\",\"Aminatou\",\"and/or\",\"Angel\",\"Angrath\",\"Antelope\",\"Ape\",\r\n        \"Arcane\",\"Archer\",\"Archon\",\"Arkhos\",\"Arlinn\",\"Art\",\"Artificer\",\"Ashiok\",\r\n        \"Assassin\",\"Assembly-Worker\",\"Atog\",\"Aura\",\"Aurochs\",\"Autobot\",\"Avatar\",\r\n        \"Azgol\",\"Azra\",\"Baddest,\",\"Badger\",\"Barbarian\",\"Basilisk\",\"Basri\",\"Bat\",\r\n        \"Bear\",\"Beast\",\"Beaver\",\"Beeble\",\"Beholder\",\"Belenon\",\"Berserker\",\"Biggest,\",\r\n        \"Bird\",\"Boar\",\"B.O.B.\",\"Bolas\",\"Bolas’s Meditation Realm\",\"Bot\",\"Brainiac\",\r\n        \"Bringer\",\"Brushwagg\",\"Bureaucrat\",\"Calix\",\"Camel\",\"Carrier\",\"Cartouche\",\r\n        \"Cat\",\"Centaur\",\"Cephalid\",\"Chameleon\",\"Chandra\",\"Chicken\",\"Child\",\"Chimera\",\r\n        \"Citizen\",\"Clamfolk\",\"Cleric\",\"Cloud\",\"Cockatrice\",\"Construct\",\"Contraption\",\r\n        \"Cow\",\"Crab\",\"Crocodile\",\"Curse\",\"Cyborg\",\"Cyclops\",\"Dack\",\"Daretti\",\"Dauthi\",\r\n        \"Davriel\",\"Deer\",\"Demigod\",\"Demon\",\"Desert\",\"Designer\",\"Devil\",\"Dinosaur\",\r\n        \"Djinn\",\"Dog\",\"Dominaria\",\"Domri\",\"Donkey\",\"Dovin\",\"Dragon\",\"Drake\",\"Dreadnought\",\"Drone\",\r\n        \"Druid\",\"Dryad\",\"Duck\",\"Dungeon\",\"Dwarf\",\"Efreet\",\"Egg\",\"Elder\",\"Eldrazi\",\"Elemental\",\"Elemental?\",\"Elephant\",\r\n        \"Elf\",\"Elk\",\"Elspeth\",\"Elves\",\"Equilor\",\"Equipment\",\"Ergamon\",\"Estrid\",\"Etiquette\",\"Eye\",\r\n        \"Fabacin\",\r\n        \"Faerie\",\"Ferret\",\"Fire\",\"Fish\",\"Flagbearer\",\"Food\",\"Forest\",\"Fortification\",\"Fox\",\"Freyalise\",\"Frog\",\r\n        \"Fungus\",\"Gamer\",\"Gargoyle\",\"Garruk\",\"Gate\",\"Giant\",\"Gideon\",\"Gnome\",\"Goat\",\"Goblin\",\"God\",\"Golem\",\"Gorgon\",\"Grandchild\",\"Gremlin\",\"Griffin\",\"Gus\",\"Hag\",\"Harpy\",\r\n        \"Hatificer\",\"Head\",\"Hellion\",\"Hero\",\"Hippo\",\"Hippogriff\",\"Homarid\",\"Homunculus\",\"Horror\",\"Horse\",\"Huatli\",\"Human\",\"Hydra\",\"Hyena\",\"Igpay\",\"Illusion\",\"Imp\",\r\n        \"Incarnation\",\"Innistrad\",\"Insect\",\"Inzerva\",\"Iquatana\",\"Ir\",\"Island\",\"Jace\",\"Jackal\",\"Jaya\",\"Jellyfish\",\"Jeska\",\"Juggernaut\",\"Kaldheim\",\"Kamigawa\",\r\n        \"Kangaroo\",\"Karn\",\"Karsus\",\"Kasmina\",\"Kavu\",\"Kaya\",\"Kephalai\",\"Key\",\"Killbot\",\"Kinshala\",\"Kiora\",\"Kirin\",\r\n        \"Kithkin\",\"Knight\",\"Kobold\",\"Kolbahan\",\"Kor\",\"Koth\",\"Kraken\",\"Kyneth\",\"Lady\",\"Lair\",\"Lamia\",\"Lammasu\",\"Leech\",\"Legend\",\"Leviathan\",\"Lhurgoyf\",\"Licid\",\"Liliana\",\"Lizard\",\"Lobster\",\"Locus\",\"Lorwyn\",\"Lukka\",\r\n        \"Luvion\",\"Mammoth\",\"Manticore\",\"Master\",\"Masticore\",\"Mercadia\",\"Mercenary\",\"Merfolk\",\"Metathran\",\"Mime\",\"Mine\",\"Minion\",\"Minotaur\",\r\n        \"Mirrodin\",\"Moag\",\"Mode\",\"Mole\",\"Monger\",\"Mongoose\",\"Mongseng\",\"Monk\",\"Monkey\",\"Moonfolk\",\"Mountain\",\"Mouse\",\"Mummy\",\"Muraganda\",\"Mutant\",\"Myr\",\"Mystic\",\r\n        \"Naga\",\"Nahiri\",\"Narset\",\"Nastiest,\",\"Nautilus\",\"Nephilim\",\"New Phyrexia\",\"Nightmare\",\"Nightstalker\",\"Ninja\",\"Nissa\",\"Nixilis\",\r\n        \"Noble\",\"Noggle\",\"Nomad\",\"Nymph\",\"Octopus\",\"Ogre\",\"Oko\",\"Ooze\",\"Orc\",\"Orgg\",\"Otter\",\"Ouphe\",\"Ox\",\"Oyster\",\"Pangolin\",\"Paratrooper\",\"Peasant\",\"Pegasus\",\r\n        \"Penguin\",\"Pest\",\"Phelddagrif\",\"Phoenix\",\"Phyrexia\",\"Phyrexian\",\"Pilot\",\"Pirate\",\"Plains\",\"Plant\",\"Power-Plant\",\"Praetor\",\"Processor\",\r\n        \"Proper\",\"Pyrulea\",\"Rabbit\",\"Rabiah\",\"Raccoon\",\"Ral\",\"Rat\",\"Rath\",\"Ravnica\",\"Rebel\",\"Reflection\",\"Regatha\",\"Rhino\",\"Rigger\",\"Rogue\",\"Rowan\",\"Sable\",\"Saga\",\"Saheeli\",\"Salamander\",\"Samurai\",\r\n        \"Samut\",\"Sarkhan\",\"Satyr\",\"Scarecrow\",\"Scientist\",\"Scorpion\",\"Scout\",\"Segovia\",\"Serpent\",\"Serra\",\"Serra’s Realm\",\r\n        \"Shade\",\"Shadowmoor\",\"Shaman\",\"Shandalar\",\"Shapeshifter\",\"Shark\",\"Sheep\",\"Ship\",\"Shrine\",\"Siren\",\"Skeleton\",\"Slith\",\"Sliver\",\"Slug\",\"Snake\",\"Soldier\",\r\n        \"Soltari\",\"Sorin\",\"Spawn\",\"Specter\",\"Spellshaper\",\"Sphinx\",\"Spider\",\"Spike\",\"Spirit\",\"Sponge\",\"Spy\",\"Squid\",\"Squirrel\",\"Starfish\",\"Surrakar\",\"Swamp\",\r\n        \"Szat\",\"Tamiyo\",\"Teferi\",\"Teyo\",\"Tezzeret\",\"Thalakos\",\"The\",\"Thopter\",\"Thrull\",\"Tibalt\",\"Tower\",\"Townsfolk\",\"Trap\",\"Treefolk\",\"Trilobite\",\"Troll\",\"Turtle\",\r\n        \"Ugin\",\"Ulgrotha\",\"Unicorn\",\"Urza\",\"Urza’s\",\"Valla\",\"Vampire\",\"Vampyre\",\"Vedalken\",\"Vehicle\",\"Venser\",\"Viashino\",\"Villain\",\"Vivien\",\r\n        \"Volver\",\"All\",\"Vraska\",\"Vryn\",\"Waiter\",\"Wall\",\"Warlock\",\"Warrior\",\"Weird\",\"Werewolf\",\"Whale\",\"Wildfire\",\"Will\",\"Windgrace\",\"Wizard\",\"Wolf\",\"Wolverine\",\"Wombat\",\"Worm\",\"Wraith\",\"Wrenn\",\"Wrestler\",\"Wurm\",\"Xenagos\",\"Xerex\",\"Yanggu\",\"Yanling\",\"Yeti\",\"Zendikar\",\"Zombie\",\"Zubera\"]\r\n    const supertypes = [\"All\",\"Basic\",\"Host\",\"Legendary\",\"Ongoing\",\"Snow\",\"World\"]\r\n    const format = [\"All\",\"Brawl\",\"Commander\",\"Duel\",\"Future\",\"Historic\",\"Legacy\",\"Modern\",\"Oldschool\",\"Pauper\",\"Penny\",\"Pioneer\",\"Standard\",\"Vintage\"]\r\n    //state variable\r\n    const [currentType, setCurrentType] = useState(def);\r\n    const [currentSubType, setCurrentSubType] = useState(def)\r\n    const [currentSuperType, setCurrentSuperType] = useState(def)\r\n    const [currentFormat, setCurrentFormat] = useState(def)\r\n\r\n    useEffect(() => {\r\n        setCardsWithParam({\r\n            type: currentType === def? null : currentType,\r\n            gameFormat: currentFormat === def? null : currentFormat,\r\n            subtypes: currentSubType === def? null : currentSubType,\r\n            supertypes: currentSuperType === def? null : currentSuperType\r\n        })\r\n    }, [currentFormat, currentType, currentSubType, currentSuperType])\r\n    return (\r\n        <div style={style}>\r\n            <div style={box}>\r\n                <p>Type</p>\r\n                <DropDownMenu value={currentType} list = {types} change = {setCurrentType}/>\r\n            </div>\r\n            <div style={box}>\r\n                <p>Subtype</p>\r\n                <DropDownMenu value={currentSubType} list = {subtypes} change = {setCurrentSubType}/>\r\n            </div>\r\n            \r\n            <div style={box}>\r\n                <p>Supertype</p>\r\n                <DropDownMenu value={currentSuperType} list = {supertypes} change = {setCurrentSuperType}/>\r\n            </div>\r\n            \r\n            <div style={box}>\r\n                <p>Format</p>\r\n                <DropDownMenu value={currentFormat} list = {format} change = {setCurrentFormat}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst style = {\r\n    display: 'flex'\r\n}\r\n\r\nconst box = {\r\n    width: '5em'\r\n}\r\n\r\nexport default Filter","E:\\Fullstack\\mtg-fullstack\\src\\components\\DropDownMenu.js",[],"E:\\Fullstack\\mtg-fullstack\\src\\context\\CardContext.js",["63","64"],"import React, { createContext,  useState } from 'react';\r\nimport { getCardsWithParam, getRandomCards, getPageLastParam } from '../axios/api';\r\n\r\nexport const CardsContext = createContext();\r\nexport const CardsContextProvider = (props) => {\r\n    const [ cards, setCards ] = useState(null);\r\n    const [ maxPage, setMaxPage ] = useState(1);\r\n\r\n    const initCards = () => {\r\n        getRandomCards().then((data) => {\r\n            setCards(data.data.cards);\r\n        });\r\n    }\r\n\r\n    const setCardsWithParam = (params) => {\r\n        getCardsWithParam(params).then((data) => {\r\n            setCards(data.data.cards);\r\n        });\r\n    }\r\n\r\n    const getPage = (page) => {\r\n        getPageLastParam(page).then((data) => {\r\n            setCards(data.data.cards);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <CardsContext.Provider value={{cards, initCards, setCardsWithParam, getPage}}>\r\n            {props.children}\r\n        </CardsContext.Provider>\r\n    );\r\n}",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"65","replacedBy":"71"},{"ruleId":"67","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":11,"column":8,"nodeType":"75","endLine":11,"endColumn":10,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":60,"column":8,"nodeType":"75","endLine":60,"endColumn":70,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":7,"column":13,"nodeType":"81","messageId":"82","endLine":7,"endColumn":20},{"ruleId":"79","severity":1,"message":"83","line":7,"column":22,"nodeType":"81","messageId":"82","endLine":7,"endColumn":32},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],["84"],["85"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initCards'. Either include it or remove the dependency array.","ArrayExpression",["86"],"React Hook useEffect has a missing dependency: 'setCardsWithParam'. Either include it or remove the dependency array.",["87"],"no-unused-vars","'maxPage' is assigned a value but never used.","Identifier","unusedVar","'setMaxPage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [initCards]",{"range":"92","text":"93"},"Update the dependencies array to be: [currentFormat, currentType, currentSubType, currentSuperType, setCardsWithParam]",{"range":"94","text":"95"},[363,365],"[initCards]",[5724,5786],"[currentFormat, currentType, currentSubType, currentSuperType, setCardsWithParam]"]